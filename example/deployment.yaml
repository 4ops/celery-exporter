apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-prometheus-exporter
      microservice: some-app-name
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8888"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: celery-prometheus-exporter
        microservice: some-app-name
    spec:
      containers:
        - env:
            - name: BROKER_URL
              value: redis://redis:6379/1
          image: 4ops/celery-exporter
          imagePullPolicy: Always
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
            successThreshold: 2
            httpGet:
              scheme: HTTP
              path: /metrics
              port: metrics
          name: exporter
          ports:
            - containerPort: 8888
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 120m
              memory: 60Mi
            requests:
              cpu: 120m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsGroup: 1001
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
